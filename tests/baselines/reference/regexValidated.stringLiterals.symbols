=== tests/cases/conformance/types/regexValidated/regexValidated.stringLiterals.ts ===
let fontColor: /^#([0-9a-f]{3}|[0-9a-f]{6})$/i = '#000';
>fontColor : Symbol(fontColor, Decl(regexValidated.stringLiterals.ts, 0, 3))

let catdogfish: /^(dog|cat|fish)(,(dog|cat|fish))*$/ = 'cat,fish,dog,fish,cat';
>catdogfish : Symbol(catdogfish, Decl(regexValidated.stringLiterals.ts, 2, 3))

let digits: /^[0-9]+$/ = '02338374729';
>digits : Symbol(digits, Decl(regexValidated.stringLiterals.ts, 4, 3))

let hexDigits: /^([0-9]|[A-F])+$/ = '0F12A';
>hexDigits : Symbol(hexDigits, Decl(regexValidated.stringLiterals.ts, 6, 3))

type Email = /^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;
>Email : Symbol(Email, Decl(regexValidated.stringLiterals.ts, 6, 44))

let address: Email = 'typescript@microsoft.com';
>address : Symbol(address, Decl(regexValidated.stringLiterals.ts, 9, 3))
>Email : Symbol(Email, Decl(regexValidated.stringLiterals.ts, 6, 44))

type Gmail = /^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@gmail\.com$/i;
>Gmail : Symbol(Gmail, Decl(regexValidated.stringLiterals.ts, 9, 48))

let gmailAddress: Gmail = 'example@GMAIL.COM';
>gmailAddress : Symbol(gmailAddress, Decl(regexValidated.stringLiterals.ts, 12, 3))
>Gmail : Symbol(Gmail, Decl(regexValidated.stringLiterals.ts, 9, 48))



