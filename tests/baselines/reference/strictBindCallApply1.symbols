=== tests/cases/conformance/functions/strictBindCallApply1.ts ===
declare function foo(a: number, b: string): string;
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>a : Symbol(a, Decl(strictBindCallApply1.ts, 0, 21))
>b : Symbol(b, Decl(strictBindCallApply1.ts, 0, 31))

let f00 = foo.bind(undefined);
>f00 : Symbol(f00, Decl(strictBindCallApply1.ts, 2, 3))
>foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let f01 = foo.bind(undefined, 10);
>f01 : Symbol(f01, Decl(strictBindCallApply1.ts, 3, 3))
>foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let f02 = foo.bind(undefined, 10, "hello");
>f02 : Symbol(f02, Decl(strictBindCallApply1.ts, 4, 3))
>foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let f03 = foo.bind(undefined, 10, 20);  // Error
>f03 : Symbol(f03, Decl(strictBindCallApply1.ts, 5, 3))
>foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let c00 = foo.call(undefined, 10, "hello");
>c00 : Symbol(c00, Decl(strictBindCallApply1.ts, 7, 3))
>foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let c01 = foo.call(undefined, 10);  // Error
>c01 : Symbol(c01, Decl(strictBindCallApply1.ts, 8, 3))
>foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let c02 = foo.call(undefined, 10, 20);  // Error
>c02 : Symbol(c02, Decl(strictBindCallApply1.ts, 9, 3))
>foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let c03 = foo.call(undefined, 10, "hello", 30);  // Error
>c03 : Symbol(c03, Decl(strictBindCallApply1.ts, 10, 3))
>foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let a00 = foo.apply(undefined, [10, "hello"]);
>a00 : Symbol(a00, Decl(strictBindCallApply1.ts, 12, 3))
>foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let a01 = foo.apply(undefined, [10]);  // Error
>a01 : Symbol(a01, Decl(strictBindCallApply1.ts, 13, 3))
>foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let a02 = foo.apply(undefined, [10, 20]);  // Error
>a02 : Symbol(a02, Decl(strictBindCallApply1.ts, 14, 3))
>foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let a03 = foo.apply(undefined, [10, "hello", 30]);  // Error
>a03 : Symbol(a03, Decl(strictBindCallApply1.ts, 15, 3))
>foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>foo : Symbol(foo, Decl(strictBindCallApply1.ts, 0, 0))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

class C {
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))

    constructor(a: number, b: string) {}
>a : Symbol(a, Decl(strictBindCallApply1.ts, 18, 16))
>b : Symbol(b, Decl(strictBindCallApply1.ts, 18, 26))

    foo(this: this, a: number, b: string): string { return "" }
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>this : Symbol(this, Decl(strictBindCallApply1.ts, 19, 8))
>a : Symbol(a, Decl(strictBindCallApply1.ts, 19, 19))
>b : Symbol(b, Decl(strictBindCallApply1.ts, 19, 30))
}

declare let c: C;
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))

declare let obj: {};
>obj : Symbol(obj, Decl(strictBindCallApply1.ts, 23, 11))

let f10 = c.foo.bind(c);
>f10 : Symbol(f10, Decl(strictBindCallApply1.ts, 25, 3))
>c.foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let f11 = c.foo.bind(c, 10);
>f11 : Symbol(f11, Decl(strictBindCallApply1.ts, 26, 3))
>c.foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let f12 = c.foo.bind(c, 10, "hello");
>f12 : Symbol(f12, Decl(strictBindCallApply1.ts, 27, 3))
>c.foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let f13 = c.foo.bind(c, 10, 20);  // Error
>f13 : Symbol(f13, Decl(strictBindCallApply1.ts, 28, 3))
>c.foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let f14 = c.foo.bind(undefined);  // Error
>f14 : Symbol(f14, Decl(strictBindCallApply1.ts, 29, 3))
>c.foo.bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>bind : Symbol(CallableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let c10 = c.foo.call(c, 10, "hello");
>c10 : Symbol(c10, Decl(strictBindCallApply1.ts, 31, 3))
>c.foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let c11 = c.foo.call(c, 10);  // Error
>c11 : Symbol(c11, Decl(strictBindCallApply1.ts, 32, 3))
>c.foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let c12 = c.foo.call(c, 10, 20);  // Error
>c12 : Symbol(c12, Decl(strictBindCallApply1.ts, 33, 3))
>c.foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let c13 = c.foo.call(c, 10, "hello", 30);  // Error
>c13 : Symbol(c13, Decl(strictBindCallApply1.ts, 34, 3))
>c.foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let c14 = c.foo.call(undefined, 10, "hello");  // Error
>c14 : Symbol(c14, Decl(strictBindCallApply1.ts, 35, 3))
>c.foo.call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>call : Symbol(CallableFunction.call, Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let a10 = c.foo.apply(c, [10, "hello"]);
>a10 : Symbol(a10, Decl(strictBindCallApply1.ts, 37, 3))
>c.foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let a11 = c.foo.apply(c, [10]);  // Error
>a11 : Symbol(a11, Decl(strictBindCallApply1.ts, 38, 3))
>c.foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let a12 = c.foo.apply(c, [10, 20]);  // Error
>a12 : Symbol(a12, Decl(strictBindCallApply1.ts, 39, 3))
>c.foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let a13 = c.foo.apply(c, [10, "hello", 30]);  // Error
>a13 : Symbol(a13, Decl(strictBindCallApply1.ts, 40, 3))
>c.foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

let a14 = c.foo.apply(undefined, [10, "hello"]);  // Error
>a14 : Symbol(a14, Decl(strictBindCallApply1.ts, 41, 3))
>c.foo.apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c.foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))
>foo : Symbol(C.foo, Decl(strictBindCallApply1.ts, 18, 40))
>apply : Symbol(CallableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>undefined : Symbol(undefined)

let f20 = C.bind(undefined);
>f20 : Symbol(f20, Decl(strictBindCallApply1.ts, 43, 3))
>C.bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let f21 = C.bind(undefined, 10);
>f21 : Symbol(f21, Decl(strictBindCallApply1.ts, 44, 3))
>C.bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let f22 = C.bind(undefined, 10, "hello");
>f22 : Symbol(f22, Decl(strictBindCallApply1.ts, 45, 3))
>C.bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

let f23 = C.bind(undefined, 10, 20);  // Error
>f23 : Symbol(f23, Decl(strictBindCallApply1.ts, 46, 3))
>C.bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>bind : Symbol(NewableFunction.bind, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --) ... and 1 more)
>undefined : Symbol(undefined)

C.call(c, 10, "hello");
>C.call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.call(c, 10);  // Error
>C.call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.call(c, 10, 20);  // Error
>C.call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.call(c, 10, "hello", 30);  // Error
>C.call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>call : Symbol(NewableFunction.call, Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.apply(c, [10, "hello"]);
>C.apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.apply(c, [10]);  // Error
>C.apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.apply(c, [10, 20]);  // Error
>C.apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

C.apply(c, [10, "hello", 30]);  // Error
>C.apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>C : Symbol(C, Decl(strictBindCallApply1.ts, 15, 50))
>apply : Symbol(NewableFunction.apply, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>c : Symbol(c, Decl(strictBindCallApply1.ts, 22, 11))

