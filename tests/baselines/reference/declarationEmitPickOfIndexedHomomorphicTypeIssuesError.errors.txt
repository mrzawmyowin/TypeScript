tests/cases/compiler/declarationEmitPickOfIndexedHomomorphicTypeIssuesError.ts(2,5): error TS2344: Type '(keyof T & undefined) | undefined' does not satisfy the constraint 'keyof T'.
  Type 'undefined' is not assignable to type 'keyof T'.


==== tests/cases/compiler/declarationEmitPickOfIndexedHomomorphicTypeIssuesError.ts (1 errors) ====
    export type Omit<T, K extends keyof T> = Pick<T, 
        ({ [P in keyof T]: P } & { [P in K]: never } )[keyof T]>;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2344: Type '(keyof T & undefined) | undefined' does not satisfy the constraint 'keyof T'.
!!! error TS2344:   Type 'undefined' is not assignable to type 'keyof T'.
    
    export interface IOmitTest {
    	(): { notSupposedToHappen: Omit<IXProps, "unwantedProp"> }
    }
    
    export interface IXProps {
        optionalProp?: string
        unwantedProp: string
    }
    
    const Y: IOmitTest = null as any;
    export const Z = Y();
    
    export interface IMouseOver {
        wrong: Omit<IXProps, "unwantedProp">
    }